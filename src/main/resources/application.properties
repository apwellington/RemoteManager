
# create and drop tables and sequences, loads import.sql
#spring.jpa.hibernate.ddl-auto=create-drop
# Oracle settings
#spring.datasource.url=jdbc:oracle:thin:@localhost:1522:orcl
#spring.datasource.username=HIBERNATE_TEST
#spring.datasource.password=HIBERNATE_TEST
#spring.datasource.driver.class=oracle.jdbc.driver.OracleDriver
# logging
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n
#logging.level.org.hibernate.SQL=debug


#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
########################################################################################
#Configuracion de prueba para ejecutarlo con MySQL#
#spring.datasource.driver.class=com.mysql.jdbc.Driver
spring.datasource.url = jdbc:mysql://localhost:3306/robot_rpa?useSSL=false
spring.datasource.username = root
spring.datasource.password =
## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update
# Allows Hibernate to generate SQL optimized for a particular DBMS


# Show or not log for each sql query
spring.jpa.show-sql = true
########################################################################################

