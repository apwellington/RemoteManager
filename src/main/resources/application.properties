
# create and drop tables and sequences, loads import.sql
#spring.jpa.hibernate.ddl-auto=create-drop
# Oracle settings
#spring.datasource.url=jdbc:oracle:thin:@localhost:1522:orcl
#spring.datasource.username=HIBERNATE_TEST
#spring.datasource.password=HIBERNATE_TEST
#spring.datasource.driver.class=oracle.jdbc.driver.OracleDriver
# logging
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n
#logging.level.org.hibernate.SQL=debug



#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
########################################################################################
#Configuracion de prueba para ejecutarlo con MySQL#
#spring.datasource.driver.class=com.mysql.jdbc.Driver
#spring.datasource.url = jdbc:mysql://172.27.40.107:3306/robot_rpa?useSSL=false
#spring.datasource.url = jdbc:mysql://localhost:3306/robot_rpa?useSSL=false
#spring.datasource.username = root
#spring.datasource.password =



spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect
spring.datasource.url= jdbc:oracle:thin:@172.27.17.213:1521:sysreqdb
spring.datasource.username=moose
spring.datasource.password=moose
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
## this shows the sql actions in the terminal logs
##optional, but just in case another application is listening on your default  port (8080)


## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update
# Allows Hibernate to generate SQL optimized for a particular DBMS


# Show or not log for each sql query
spring.jpa.show-sql = true
########################################################################################



spring.banner.location=classpath:banner.txt



server.port = 8080
logging.level.=DEBUG



#spring.queries.users-query=select email, password, active from user where email=?
#spring.queries.roles-query=select u.email, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?
spring.datasource.initialization-mode=always


